써드파티 패키지들의 설치에 대해
==============================
Thonny는 써드파티 라이브러리 설치를 위한 두 개의 옵션이 있습니다.

pip-GUI를 이용할 경우
-------------
"도구"에서 "패키지 관리..."를 선택하고 안내에 따르세요.

커맨드라인에서 pip를 이용할 경우
------------------------
#. "도구"에서 "시스템 셸 열기..."를 선택하세요. *pip* 명령(일반적으로``pip ''또는``pip3 '')을 나타내는 새 터미널 창이 표시됩니다. 여기서는 명령 이름이``pip ''라고 가정했습니다.
#. ``pip install <패키지 이름>``(예 :``pip install pygame '')을 입력하고 엔터를 누릅니다. *pip*가 패키지 다운로드 및 설치 및 성공 메시지를 표시합니다.
#. 터미널을 닫으세요 (선택)
#. Thonny로 돌아가세요
#. "실행"에서 "정지/재시작"을 선택하여 인터프리터를 재설정합니다 (pip 설치를 처음 수행 할 때만)
#. 설치된 패키지를 사용하시면 됩니다.


scientific Python 패키지들을 이용할 경우
================================
Thonny와 함께 제공되는 Python 배포판에는 과학 프로그래밍 라이브러리가 포함되어 있지 않습니다
(예: `NumPy <http://numpy.org/>`_ , `Matplotlib <http://matplotlib.org/>`_)

대부분의 인기있는 과학 Python 패키지의 최신 버전 (예 : numpy, pandas 및 matplotlib)
에는 널리 사용되는 플랫폼에서 사용 가능한 휠이 있으므로
대부분 pip를 사용하여 설치할 수 있으나 만약 문제가있는 경우 Thonny를 별도의
과학 컴퓨팅을위한 Python 배포판을 사용해 볼 수 있습니다.
(예: `Anaconda <https://www.anaconda.com>`_ 혹은 `Pyzo <http://www.pyzo.org/>`_)


예제: Anaconda를 이용할 경우
------------------------------------
https://www.anaconda.com/products/individual 에서 플랫폼에 맞는 사용할 바이너리 배포판을 다운로드 하세요.
대부분 그래픽 설치 프로그램 및 64비트 버전을 사용합니다.
(아주 오래된 시스템을 사용하는 경우 32비트 버전을 사용하세요)

설치 및 Python 실행 파일이 어디에 있는지 확인하세요. (Windows에서는 *pythonw.exe* 을
Linux 및 Mac의 경우에는 *python3* 혹은 *python* )

Thonny에서 "도구"를 열고 "옵션..."을 선택하세요. 옵션 대화 상자에서 "인터프리터"
탭을 열고, "실행 파일 선택"을 클릭하고 Anaconda의 Python 실행 파일 위치를 선택합니다.

이 작업 후, 다음에 프로그램을 실행할 때 Anaconda에서 사용되는
Python이 실행되며 설치된 모든 라이브러리를 사용할 수 있습니다.
